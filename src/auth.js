// Generated by CoffeeScript 1.8.0
(function() {
  var Auth, OAuth2Client, asyncmachine, google,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  google = require("googleapis");

  asyncmachine = require("asyncmachine");

  OAuth2Client = google.auth.OAuth2;

  Auth = (function(_super) {
    __extends(Auth, _super);

    Auth.prototype.CredentialsSet = {};

    Auth.prototype.Ready = {
      auto: true,
      requires: ['CredentialsSet']
    };

    Auth.prototype.Error = {
      drops: ['Ready']
    };

    Auth.prototype.client = null;

    Auth.prototype.config = null;

    function Auth(config) {
      this.config = config;
      Auth.__super__.constructor.call(this, {});
      if (config.debug) {
        this.debug('Auth ', 2);
      }
      this.register('Ready', 'CredentialsSet');
      this.client = new OAuth2Client(config.client_id, config.client_secret, config.redirect_url);
      if (config.access_token && config.refresh_token) {
        this.add('CredentialsSet');
      } else {
        throw new Error('not-implemented');
      }
    }

    Auth.prototype.CredentialsSet_enter = function() {
      this.client.setCredentials({
        access_token: this.config.access_token,
        refresh_token: this.config.refresh_token
      });
      return this.add('Ready');
    };

    return Auth;

  })(asyncmachine.AsyncMachine);

  module.exports = {
    Auth: Auth
  };

}).call(this);

//# sourceMappingURL=auth.js.map
